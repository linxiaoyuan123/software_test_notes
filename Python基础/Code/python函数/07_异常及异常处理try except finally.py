"""
异常的概念：
    程序在运行时，如果Python解释器遇到到一个错误，则会停止程序的执行，并且提示一些错误信息，这就是异常.
    程序停止执行并且提示错误信息这个动作，通常称之为：抛出（raise）异常

提示：
    程序开发时，很难将所有的特殊情况都处理的面面俱到，通过异常捕获可以针对突发事件做集中的处理，
    从而保证程序的稳定性和健壮性，在自动化测试过程中，也可以借助捕获异常操作，完成类似：
    用例执行报错时截图、打印日志信息等操作

捕获异常有两种：
    捕获特定异常类型
        try:
            #尝试执行的代码
        except 异常类型(举例：ValueError，ZeroDivisionError):
            #出现异常时执行的代码

    捕获未知类型异常(重要)
        try:
            #尝试执行的代码
        except Exception as e:
            #出现异常时执行的代码
            print('异常信息为: {}'.format(e))

    说明：
        如果希望程序无论出现任何错误，都不会因为Python解释器抛出异常而被终止，可以捕获Exception
        exceptException as e:e表示捕获到的异常对象，记录异常的错误信息，e为惯用变量名，可以自定义

需求：
提示用户输入一个整数
使用8除以用户输入的整数并且输出
要求：为了简化代码，统一捕获所有异常类型
"""

#以下为捕获未知类型异常的操作
try:
    num1 = int(input("请输入一个整数："))
    num2 = 8 / num1
    print(num2)
except Exception as e:
    print('异常信息为: {}'.format(e))   #打印异常
    #raise "程序出错了"  #抛出异常
finally:
    print("程序结束")